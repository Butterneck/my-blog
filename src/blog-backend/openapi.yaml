# TODO: make this a template
openapi: 3.0.0
info:
  title: CRUD API for Posts
  version: 1.0.0
# servers:
# - url: "https://t02ntbsa62.execute-api.eu-west-1.amazonaws.com/{basePath}"
#   variables:
#     basePath:
#       default: "dev"
paths:
  /api/v1/posts:
    get:
      summary: Retrieve a list of posts
      responses:
        200:
          description: A list of posts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Post'
        500:
          description: Internal Server Error
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/${backend_lambda_arn}/invocations"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
    post:
      summary: Create a new post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPostRequest'
      responses:
        201:
          description: The newly created post
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        400:
          description: Bad Request
        500:
          description: Internal Server 
      security:
      - admin-authorizer: []
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/${backend_lambda_arn}/invocations"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
  /api/v1/posts/{postId}:
    parameters:
      - name: postId
        in: path
        required: true
        schema:
          type: string
    get:
      summary: Retrieve a post by ID
      responses:
        200:
          description: The requested post
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        404:
          description: Post not found
        500:
          description: Internal Server Error
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/${backend_lambda_arn}/invocations"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
    put:
      summary: Update a post by ID
      parameters:
        - name: postId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePostRequest'
      responses:
        200:
          description: The updated post
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        400:
          description: Bad Request
        404:
          description: Post not found
        500:
          description: Internal Server Error
      security:
        - admin-authorizer: []
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/${backend_lambda_arn}/invocations"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
    delete:
      summary: Delete a post by ID
      parameters:
        - name: postId
          in: path
          required: true
          schema:
            type: string
      responses:
        204:
          description: Post successfully deleted
        404:
          description: Post not found
        500:
          description: Internal Server Error
      security:
      - admin-authorizer: []
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/${backend_lambda_arn}/invocations"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
components:
  schemas:
    Post:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        body:
          type: string
        slug:
          type: string
        createdAt:
          type: integer
        description:
          type: string
        isComplete:
          type: boolean
        tags:
          type: array
          items:
            type: string
    UpdatePostRequest:
      type: object
      properties:
        title:
          type: string
        body:
          type: string
    NewPostRequest:
      type: object
      properties:
        title:
          type: string
        body:
          type: string
  securitySchemes:
    admin-authorizer:
      type: "apiKey"
      name: "Authorization"
      in: "header"
      x-amazon-apigateway-authtype: "cognito_user_pools"
      x-amazon-apigateway-authorizer:
        providerARNs:
        - ${cognito_user_pool_arn}
        type: "cognito_user_pools"